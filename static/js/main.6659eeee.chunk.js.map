{"version":3,"sources":["atoms.js","Button.js","searchR.js","Search.js","App.js","Item.js","history.js","theme.js","Nav.js","reportWebVitals.js","index.js"],"names":["user","atom","key","default","index","ee","us","counterT","counterF","search","input","Buttonn","useRecoilState","viewAtom","users","setUsers","counterTAtom","setCounterT","eAtom","className","onClick","filter","item","completed","SearchR","searchAtom","indexAtom","id","title","date","JSON","stringify","to","exact","path","component","App","Search","e","setE","setSearch","useState","loading","setloading","setIndex","type","placeholder","onChange","event","preventDefault","target","value","person","includes","map","i","j","addVar","newItem","setNewItem","userAtom","usAtom","setUser","counterFAtom","setCounterF","eeAtom","setEE","page","setPage","fetchRequest","useCallback","fetch","then","results","json","data","o","length","addDelete","y","variant","Button","Pagination","count","Math","ceil","siblingCount","boundaryCount","newPage","defaultPage","shape","size","slice","sort","x","data-id","defaultChecked","newState","obj","ob","console","log","addToggle","bind","concat","floor","random","Date","toLocaleDateString","Item","inputAtom","setInput","push","useHistory","contentEditable","onInput","currentTarget","textContent","suppressContentEditableWarning","newMode","Object","assign","newNode","el","createBrowserHistory","fonts","body","heading","monospace","colors","text","background","primary","bg","styles","h1","fontSize","fontFamily","fontWeight","color","mt","mb","buttons","secondary","Nav","theme","history","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6659eeee.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const user = atom({\r\n  key: \"users\",\r\n  default:  [],\r\n \r\n});\r\nexport const index = atom({\r\n    key: \"index\",\r\n    default:  [],\r\n   \r\n  });\r\n  export const ee = atom({\r\n    key: \"ee\",\r\n    default: '',\r\n   \r\n  });\r\n  export const us = atom({\r\n    key: \"user\",\r\n    default:  [],\r\n   \r\n  });\r\n  export const counterT = atom({\r\n    key: \"counterT\",\r\n    default:  0,\r\n   \r\n  });\r\n  export const counterF = atom({\r\n    key: \"counterF\",\r\n    default:  0,\r\n   \r\n  });\r\n  export const search = atom({\r\n    key: \"search\",\r\n    default:  [],\r\n   \r\n  });\r\n  export const input = atom({\r\n    key: \"input\",\r\n    default: '',\r\n   \r\n  });","\r\nimport { useRecoilState } from \"recoil\";\r\nimport { user as viewAtom } from \"./atoms\";\r\nimport { ee as eAtom } from \"./atoms\";\r\nimport {counterT as counterTAtom} from './atoms';\r\nimport { Button} from 'theme-ui';\r\n\r\n\r\nfunction Buttonn() {\r\n    const [users, setUsers] = useRecoilState(viewAtom);\r\n    const [counterT, setCounterT] = useRecoilState(counterTAtom);\r\n    const [e, setE] = useRecoilState(eAtom);\r\n\r\n    const checkItem = () => {\r\n        setUsers(users.filter(item => item.completed !== true));\r\n          setCounterT(0);\r\n      }\r\n  \r\n    return (\r\n      <Button className = 'btn1' onClick={checkItem}>\r\n      Ukryj zaznaczone\r\n      </Button>\r\n    );\r\n  }\r\n  export default Buttonn;","import { useRecoilState } from \"recoil\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport App from './App';\r\nimport { search as searchAtom } from \"./atoms\";\r\nimport { index as indexAtom } from \"./atoms\";\r\nimport { user as viewAtom } from \"./atoms\";\r\n\r\nfunction SearchR() {\r\n\r\n    const [search, setSearch] = useRecoilState(searchAtom);\r\n    const [index, setIndex] = useRecoilState(indexAtom);\r\n    const [users, setUsers] = useRecoilState(viewAtom);\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <table>\r\n            <thead>\r\n              <tr>\r\n              <th>Id</th>\r\n              <th>Text</th>\r\n              <th>Date</th>\r\n              <th>Completed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n            <td>\r\n                {index.id}\r\n               </td>\r\n                <td>\r\n                {index.title}\r\n               </td>\r\n               <td>\r\n                {index.date}\r\n               </td>\r\n               <td>\r\n                {JSON.stringify(index.completed ? true : false)}\r\n               </td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n          <Link className = 'l0' to = '/'>Powrót</Link>\r\n        </header>\r\n        <Router>\r\n            <Switch>\r\n            <Route exact path=\"/\" component={App}  />\r\n            </Switch>\r\n       </Router>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  export default SearchR;\r\n","import React, { useState} from 'react';\r\nimport { useRecoilState} from \"recoil\";\r\nimport { ee as eAtom } from \"./atoms\";\r\nimport { user as viewAtom } from \"./atoms\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport SearchR from './searchR';\r\nimport { search as searchAtom } from \"./atoms\";\r\nimport { index as indexAtom } from \"./atoms\";\r\nimport { ThemeProvider, Button} from 'theme-ui';\r\nimport './App.css';\r\n\r\nfunction Search() {\r\n\r\n    const [e, setE] = useRecoilState(eAtom);\r\n    const [search, setSearch] = useRecoilState(searchAtom);\r\n    const [loading, setloading] = useState(false);\r\n    const [index, setIndex] = useRecoilState(indexAtom);\r\n    const [users, setUsers] = useRecoilState(viewAtom);\r\n\r\n    const handleChange = event => {\r\n        event.preventDefault();\r\n        setE(event.target.value);\r\n     \r\n      };\r\n\r\n      const loadingS = () => {\r\n        setloading(true);\r\n        setSearch(users.filter(person =>\r\n          person.title.includes(e)\r\n        ));\r\n      };\r\n\r\n      const addVar = (item, i) => {\r\n        setIndex(item);\r\n        }\r\n\r\n    return (\r\n        <div>\r\n         <input\r\n        type=\"text\"\r\n        placeholder=\"Szukaj\"\r\n        onChange={handleChange}\r\n        className ='inpt0'\r\n      />\r\n         <Button type = 'submit' className ='btn btn-primary' onClick = {loadingS}>Szukaj</Button>\r\n      \r\n         { loading && search.map((item, i) => (\r\n          <ul className = 'list0' key = {i}>\r\n            <li><Link onClick = {(j) => { addVar(item, i)}} to = '/searchR'>{item.title}</Link></li>\r\n            \r\n          </ul>\r\n        ))}\r\n       <Router>\r\n            <Switch>\r\n            <Route exact path=\"/searchR\" component={SearchR}  />\r\n            </Switch>\r\n       </Router>\r\n      </div>\r\n    );\r\n  }\r\n  export default Search;","import './App.css';\nimport { Link} from 'react-router-dom';\nimport React, { useState,  useCallback, useEffect} from 'react';\nimport Buttonn from './Button';\nimport Search from  './Search';\nimport { useRecoilState } from 'recoil';\nimport { user as userAtom } from \"./atoms\";\nimport { us as usAtom } from \"./atoms\";\nimport {counterT as counterTAtom} from './atoms';\nimport {counterF as counterFAtom} from './atoms';\nimport {search as searchAtom } from \"./atoms\";\nimport {Button} from 'theme-ui';\nimport { index as indexAtom } from \"./atoms\";\nimport {ee as eeAtom} from './atoms';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst App = () =>{\n\n  const [newItem, setNewItem] = useState('');\n  const [users, setUsers] = useRecoilState(userAtom);\n  const [user, setUser] = useRecoilState(usAtom);\n  let [counterT, setCounterT] = useRecoilState(counterTAtom);\n  let [counterF, setCounterF] = useRecoilState(counterFAtom);\n  const [search, setSearch] = useRecoilState(searchAtom);\n  const [index, setIndex] = useRecoilState(indexAtom);\n  const [ee, setEE] = useRecoilState(eeAtom);\n  const [page, setPage] = useState(0);\n\n  const fetchRequest = useCallback(() => {\n  fetch('http://www.7mz.pl/api/data1.json')\n  .then(results => results.json())\n  .then(data => {\n    setUsers(data);\n    setCounterT(data.filter(o => o.completed === true).length);\n    setCounterF(data.filter(o => o.completed === false).length);\n  });\n}, [setUsers, setCounterT, setCounterF]);\n\nconst updateNewText = (event)=> {\n  event.preventDefault();\n  setNewItem(event.target.value);\n}\n\nconst createNew = () =>{\n  if(users){\n  setUsers(users.concat({\n  id:  Math.floor(Math.random() * (3000 + 1)) + 3000, title: newItem, completed: false, date:\n   `${new Date().toLocaleDateString()}`\n  }))\n  setSearch(search.concat({title: newItem}));\n }\n  setCounterF(counterF += 1);  \n }\n\n const addDelete = (i,j) => { \n  const data = [...users];\n  setUsers(data.filter((y) => y.id !== i));\n  setCounterT(users.filter(o => o.completed === true).length);\n  setCounterF(users.filter(o => o.completed === false).length);\n}\n\nconst addToggle = (j) => {\n\n  const newState = users.map(obj =>\n    obj.id === j ? { ...obj, completed: !obj.completed  } : obj\n);\n\nsetUsers(newState);\nlet ob = newState.filter(o => o.completed === true)\nconsole.log('Zakończone zadania:', ob);\nsetCounterT(newState.filter(o => o.completed === true).length);\nsetCounterF(newState.filter(o => o.completed === false).length);\n}\n\nconst addVar = (item, i) => {\nsetUser(item);\nsetIndex(item.id);\nsetEE(i);\n}\n\nconst handleChangePage = (event, newPage) => {\n  setPage(newPage-1);\n};\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Search />\n        <div className = 'counters'> \n        <p>Liczba zadań zakończonych: {counterT}</p>\n        </div>\n        <br />\n      <div className = 'btns'>\n      <Button type = 'submit' variant='primary' className ='btn0' onClick = {fetchRequest}>Wgraj Dane</Button>\n      <Buttonn />\n      </div>\n      <br />\n       <Pagination\n              className=\"my-3\"\n              count={Math.ceil(users.length/150)}\n              page={page+1}\n              siblingCount={1}\n              boundaryCount={1}\n              variant=\"outlined\"\n              onChange={handleChangePage}\n              defaultPage = {0}\n              shape = 'round'\n              size = 'medium'\n            />\n      <table>\n          <thead>\n            <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Completed</th>\n            </tr>\n          </thead>\n          <tbody>\n          {users && users.slice(page * 150, page * 150 + 150).sort((x, y) => y.completed - x.completed).map((item, i) =>\n                  <tr key = {item.id}>\n                  <td>\n                    {item.id}\n                \n                    </td>\n                     <td>\n                     <Link onClick = {(j) => { addVar(item, i)}} to ='/item'> {item.title}</Link>\n                    </td>\n                    <td>\n                    \n                    <input className = 'inpt1' type ='checkbox' data-id={i} defaultChecked= {item.completed} onChange = {(j) => {\n                     addToggle(item.id)}} />\n                    </td>\n                  \n                    <td>\n                    <Button type = 'submit' variant='secondary' className ='btn btn-warning' onClick = {addDelete.bind(null, item.id)}>Ukryj</Button>\n                    </td>\n                </tr>\n                )}\n          </tbody>\n        </table>\n        <input className = 'inpt2' onChange = {updateNewText} />\n        <Button type = 'submit' variant='secondary' className ='btn3' onClick = {createNew}>Dodaj tytuł czynności</Button>\n       </header>\n       <footer><p>autor: Maciej Zaleski</p>\n       </footer>               \n    </div>\n  );\n\n}\nexport default App;\n","import { useRecoilState } from \"recoil\";\r\nimport { user as viewAtom } from \"./atoms\";\r\nimport { index as indexAtom } from \"./atoms\";\r\nimport { us as usAtom } from \"./atoms\";\r\nimport {input as inputAtom} from './atoms'\r\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory} from 'react-router-dom';\r\nimport App from './App';\r\nimport { Button } from \"@theme-ui/components\";\r\nimport {ee as eeAtom} from './atoms';\r\n\r\nfunction Item() {\r\n\r\n    const [users, setUsers] = useRecoilState(viewAtom);\r\n    const [index, setIndex] = useRecoilState(indexAtom);\r\n    const [user, setUser] = useRecoilState(usAtom);\r\n    const [input, setInput] = useRecoilState(inputAtom);\r\n    const { push } = useHistory();\r\n    const [ee, setEE] = useRecoilState(eeAtom);\r\n\r\n    const addInput = (e) => {\r\n     setInput(e.currentTarget.textContent);\r\n    \r\n    }\r\n    const addSub = () => {\r\n\r\n      const newMode = Object.assign({}, users[ee], {title: input} );\r\n      const newNode = users.map(el => (el.id === index ? Object.assign({},  ...el.title, newMode ) : el))\r\n      setUsers(newNode);\r\n\r\n    }\r\n    console.log(user.completed);\r\n    return (\r\n\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <table>\r\n            <thead>\r\n              <tr>\r\n              <th>Id</th>\r\n              <th>Text</th>\r\n              <th>Date</th>\r\n              <th>Completed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {user && \r\n            <tr>\r\n            <td>\r\n                {user.id}\r\n               </td>\r\n                <td contentEditable='true'\r\n                    onInput={addInput} suppressContentEditableWarning={true} >\r\n                {user.title}\r\n               </td>\r\n               <td>\r\n                {user.date}\r\n               </td>\r\n               <td>\r\n                {JSON.stringify(user.completed ? true : false)}\r\n               </td>\r\n            </tr>\r\n            }\r\n            </tbody>\r\n          </table>\r\n          <br />\r\n          <Button type = 'submit' variant='primary' className ='btn0' onClick = {() => push('/')}>Powrót</Button><br />\r\n          <Button type = 'submit' variant='primary' className ='btn0' onClick = {addSub}>Zachowaj zmiany</Button>\r\n        </header>\r\n        <Router>\r\n            <Switch>\r\n            <Route exact path=\"/\" component={App}  />\r\n            </Switch>\r\n       </Router>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  export default Item;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","\r\nexport default {\r\n    fonts: {\r\n      body: 'system-ui, sans-serif',\r\n      heading: '\"Avenir Next\", sans-serif',\r\n      monospace: 'Menlo, monospace',\r\n    },\r\n    colors: {\r\n      text: 'darkslategray',\r\n      background: 'floralwhite',\r\n      primary: '#33e',\r\n      bg: 'dodgerblue'\r\n    },\r\n    styles: {\r\n        h1: {\r\n          fontSize: 32,\r\n          fontFamily: 'heading',\r\n          fontWeight: 'heading',\r\n          color: 'primary',\r\n          mt: 4,\r\n          mb: 2,\r\n        },\r\n      },\r\n      buttons: {\r\n        primary: {\r\n          color: 'background',\r\n          bg: 'primary',\r\n          '&:hover': {\r\n            bg: 'text',\r\n          }\r\n        },\r\n        secondary: {\r\n          color: 'background',\r\n          bg: 'secondary',\r\n        },\r\n      },\r\n\r\n    \r\n  }\r\n ","import { Router, Switch, Route} from 'react-router-dom';\r\nimport Item from './Item';\r\nimport App from './App';\r\nimport SearchR from './searchR'\r\nimport history from './history';\r\nimport { ThemeProvider} from 'theme-ui';\r\nimport theme from './theme';\r\n\r\nconst Nav = () => {\r\n    return(\r\n    <ThemeProvider theme={theme}>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} /> \r\n          <Route path=\"/item\" component={Item} /> \r\n          <Route path=\"/searchR\" component={SearchR} /> \r\n        </Switch>\r\n      </Router>\r\n      </ThemeProvider>\r\n    )\r\n  } \r\n  export default Nav;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Nav from './Nav';\nimport { RecoilRoot } from \"recoil\";\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n     <HashRouter>\n          <Nav />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}